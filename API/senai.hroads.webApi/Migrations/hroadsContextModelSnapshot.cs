// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using senai.hroads.webApi.Contexts;

namespace senai.hroads.webApi.Migrations
{
    [DbContext(typeof(hroadsContext))]
    partial class hroadsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.ClassHab", b =>
                {
                    b.Property<int>("idClassHab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idClasse")
                        .HasColumnType("int");

                    b.Property<int>("idHabilidade")
                        .HasColumnType("int");

                    b.HasKey("idClassHab");

                    b.HasIndex("idClasse");

                    b.HasIndex("idHabilidade");

                    b.ToTable("ClassHab");

                    b.HasData(
                        new
                        {
                            idClassHab = 1,
                            idClasse = 1,
                            idHabilidade = 1
                        },
                        new
                        {
                            idClassHab = 2,
                            idClasse = 1,
                            idHabilidade = 2
                        },
                        new
                        {
                            idClassHab = 3,
                            idClasse = 2,
                            idHabilidade = 2
                        },
                        new
                        {
                            idClassHab = 4,
                            idClasse = 3,
                            idHabilidade = 1
                        },
                        new
                        {
                            idClassHab = 5,
                            idClasse = 4,
                            idHabilidade = 2
                        },
                        new
                        {
                            idClassHab = 6,
                            idClasse = 4,
                            idHabilidade = 3
                        },
                        new
                        {
                            idClassHab = 7,
                            idClasse = 6,
                            idHabilidade = 3
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.Classes", b =>
                {
                    b.Property<int>("idClasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("idClasse");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            idClasse = 1,
                            Nome = "Bárbaro"
                        },
                        new
                        {
                            idClasse = 2,
                            Nome = "Cruzado"
                        },
                        new
                        {
                            idClasse = 3,
                            Nome = "Caçadora de Demônios"
                        },
                        new
                        {
                            idClasse = 4,
                            Nome = "Monge"
                        },
                        new
                        {
                            idClasse = 5,
                            Nome = "Necromante"
                        },
                        new
                        {
                            idClasse = 6,
                            Nome = "Feiticeiro"
                        },
                        new
                        {
                            idClasse = 7,
                            Nome = "Arcanista"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.Habilidades", b =>
                {
                    b.Property<int>("idHabilidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Habilidade")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("idTipo")
                        .HasColumnType("int");

                    b.HasKey("idHabilidade");

                    b.HasIndex("idTipo");

                    b.ToTable("Habilidades");

                    b.HasData(
                        new
                        {
                            idHabilidade = 1,
                            Habilidade = "Lança Mortal",
                            idTipo = 1
                        },
                        new
                        {
                            idHabilidade = 2,
                            Habilidade = "Escudo Supremo",
                            idTipo = 2
                        },
                        new
                        {
                            idHabilidade = 3,
                            Habilidade = "Recuperar Vida",
                            idTipo = 3
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.Personagens", b =>
                {
                    b.Property<int>("idPersonagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapacidadeMaxMana")
                        .HasColumnType("int");

                    b.Property<int>("CapacidadeMaxVida")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATE");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("idClasse")
                        .HasColumnType("int");

                    b.HasKey("idPersonagem");

                    b.HasIndex("idClasse");

                    b.ToTable("Personagens");

                    b.HasData(
                        new
                        {
                            idPersonagem = 1,
                            CapacidadeMaxMana = 80,
                            CapacidadeMaxVida = 100,
                            DataAtualizacao = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(2019, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "DeuBug",
                            idClasse = 1
                        },
                        new
                        {
                            idPersonagem = 2,
                            CapacidadeMaxMana = 100,
                            CapacidadeMaxVida = 70,
                            DataAtualizacao = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(2016, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "BitBug",
                            idClasse = 4
                        },
                        new
                        {
                            idPersonagem = 3,
                            CapacidadeMaxMana = 60,
                            CapacidadeMaxVida = 75,
                            DataAtualizacao = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(2018, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Fer8",
                            idClasse = 7
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.TipoHabilidade", b =>
                {
                    b.Property<int>("idTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("idTipo");

                    b.ToTable("TipoHabilidade");

                    b.HasData(
                        new
                        {
                            idTipo = 1,
                            Tipo = "Ataque"
                        },
                        new
                        {
                            idTipo = 2,
                            Tipo = "Defesa"
                        },
                        new
                        {
                            idTipo = 3,
                            Tipo = "Cura"
                        },
                        new
                        {
                            idTipo = 4,
                            Tipo = "Magia"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.tipoUsuarioDomain", b =>
                {
                    b.Property<int>("idTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("titulo")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("idTipoUsuario");

                    b.ToTable("tipoUsuario");

                    b.HasData(
                        new
                        {
                            idTipoUsuario = 1,
                            titulo = "Administrador"
                        },
                        new
                        {
                            idTipoUsuario = 2,
                            titulo = "Cliente"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.usuarioDomain", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("idTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("senha")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("idUsuario");

                    b.HasIndex("email")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex("idTipoUsuario");

                    b.ToTable("usuario");

                    b.HasData(
                        new
                        {
                            idUsuario = 1,
                            email = "admin@admin.com",
                            idTipoUsuario = 1,
                            senha = "admin"
                        },
                        new
                        {
                            idUsuario = 2,
                            email = "cliente@cliente.com",
                            idTipoUsuario = 2,
                            senha = "cliente"
                        });
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.ClassHab", b =>
                {
                    b.HasOne("senai.hroads.webApi.Properties.Domains.Classes", "Classes")
                        .WithMany()
                        .HasForeignKey("idClasse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("senai.hroads.webApi.Properties.Domains.Habilidades", "Habilidades")
                        .WithMany()
                        .HasForeignKey("idHabilidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classes");

                    b.Navigation("Habilidades");
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.Habilidades", b =>
                {
                    b.HasOne("senai.hroads.webApi.Properties.Domains.TipoHabilidade", "tipoHabilidade")
                        .WithMany()
                        .HasForeignKey("idTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoHabilidade");
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.Personagens", b =>
                {
                    b.HasOne("senai.hroads.webApi.Properties.Domains.Classes", "Classes")
                        .WithMany()
                        .HasForeignKey("idClasse")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classes");
                });

            modelBuilder.Entity("senai.hroads.webApi.Properties.Domains.usuarioDomain", b =>
                {
                    b.HasOne("senai.hroads.webApi.Properties.Domains.tipoUsuarioDomain", "tipoUsuario")
                        .WithMany()
                        .HasForeignKey("idTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
